*** Fichier data/test_program/test_enum.lea
--> TOKEN_TYPE : type
--> TOKEN_IDENTIFIER : days
--> TOKEN_AFF : =
--> TOKEN_LPAR : (
--> TOKEN_IDENTIFIER : SUNDAY
--> TOKEN_COMMA : ,
--> TOKEN_IDENTIFIER : MONDAY
--> TOKEN_COMMA : ,
--> TOKEN_IDENTIFIER : TUESDAY
--> TOKEN_COMMA : ,
--> TOKEN_IDENTIFIER : WEDNESDAY
--> TOKEN_COMMA : ,
--> TOKEN_IDENTIFIER : THURSDAY
--> TOKEN_COMMA : ,
--> TOKEN_IDENTIFIER : FRIDAY
--> TOKEN_COMMA : ,
--> TOKEN_IDENTIFIER : SATURDAY
--> TOKEN_RPAR : )
--> TOKEN_SEMIC : ;
--> TOKEN_VAR : var
--> TOKEN_IDENTIFIER : d
--> TOKEN_COLON : :
--> TOKEN_ARRAY : array
--> TOKEN_LBRACKET : [
--> TOKEN_LIT_INTEGER : 1
--> TOKEN_DOTDOT : ..
--> TOKEN_LIT_INTEGER : 10
--> TOKEN_RBRACKET : ]
--> TOKEN_OF : of
--> TOKEN_STRING : string
--> TOKEN_SEMIC : ;
--> TOKEN_BEGIN : begin
d registered
--> TOKEN_IDENTIFIER : d
--> TOKEN_LBRACKET : [
--> TOKEN_LIT_INTEGER : 2
--> TOKEN_RBRACKET : ]
--> TOKEN_AFF : =
--> TOKEN_LIT_STRING : "
--> TOKEN_SEMIC : ;
--> TOKEN_END : end
NodeList(NodeAssign(NodeArrayAccess(NodeId#d:TypeArray(TypeArrayRange[TypeInt_1..TypeInt_10], TypeString)#, NodeLiteral#2:TypeInt_2#), NodeLiteral#5:TypeString#))
*** Analyse syntaxique ok
--- CheckType NodeList
--- CheckType NodeAssign
--- CheckType NodeArrayAccess
--- CheckType NodeLiteral
*** Typage correct
